events {
    worker_connections 4096;
}
http {
    default_type application/octet-stream;
    ssl_session_cache   shared:SSL:10m;
    ssl_session_timeout 10m;
    server {
        listen 8443;
        listen [::]:8443;
        auth_basic_user_file /etc/nginx/.htpasswd;
        location / {
            proxy_pass https://<MINIKUBE_IP_ADDRESS>:8443;
            proxy_ssl_certificate /home/<USER_NAME>/.minikube/profiles/minikube/client.crt;
            proxy_ssl_certificate_key /home/<USER_NAME>/.minikube/profiles/minikube/client.key;
        }
    }
    # selective redirect http to https
    server {
        server_name *.domain.topleveldomain;
        listen 80;
        listen [::]:80;
        if ($host = 'backendsubdomain.domain.topleveldomain') {
            return 307 http://$host:8080$request_uri;
        }
        return 307 https://$host$request_uri;
    }
    server {
        server_name backendsubdomain.domain.topleveldomain;
        listen 8080;
        listen [::]:8080;
        listen 443 ssl;
        listen [::]:443 ssl;
        keepalive_timeout   70;
        ssl_certificate     /etc/nginx/fullchain.pem;
        ssl_certificate_key /etc/nginx/privkey.pem;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
        ssl_ciphers ALL:!ADH:!EXPORT56:!aNULL:!MD5:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv3:+EXP;
        ssl_prefer_server_ciphers on;
        # backend
        location /my-backend-app-one {
            # proxy_pass http://<MINIKUBE_IP_ADDRESS>.nip.io/my-backend-app-one;
            proxy_pass http://<MINIKUBE_IP_ADDRESS OR LOAD_BALANCER_IP_ADDRESS>/my-backend-app-one;
        }
        location /my-backend-app-two {
            # proxy_pass http://<MINIKUBE_IP_ADDRESS>.nip.io/my-backend-app-two;
            proxy_pass http://<MINIKUBE_IP_ADDRESS OR LOAD_BALANCER_IP_ADDRESS>/my-backend-app-two;
        }
    }
    server {
        server_name frontendsubdomain.domain.topleveldomain;
        # listen 80;
        # listen [::]:80;
        listen 443 ssl;
        listen [::]:443 ssl;
        keepalive_timeout   70;
        ssl_certificate     /etc/nginx/fullchain.pem;
        ssl_certificate_key /etc/nginx/privkey.pem;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
        ssl_ciphers ALL:!ADH:!EXPORT56:!aNULL:!MD5:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv3:+EXP;
        ssl_prefer_server_ciphers on;
        # frontend
        location / {
            include /etc/nginx/mime.types;
            sendfile on;
            proxy_pass http://<MINIKUBE_IP_ADDRESS OR LOAD_BALANCER_IP_ADDRESS>/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_buffer_size 12k;
        }
    }
}
